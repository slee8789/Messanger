apply from: 'dependencies.gradle'

def buildVersionCode = new Date().format("yyMMddHHmm", TimeZone.getTimeZone("Asia/Seoul")).toInteger()
def buildVersionName = "1.0"

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath 'me.tatarka:gradle-retrolambda:3.7.0'
        classpath 'com.google.gms:google-services:4.0.2'
        classpath 'com.deploygate:gradle:1.1.5'
    }
}

ext {
    androidCompileSdkVersion = 27
    androidBuildToolsVersion = '27.1.1'
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 27
}



allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    if (project.getName().matches('app')) {
        apply plugin: 'com.android.application'
        android {
            compileSdkVersion androidCompileSdkVersion
            defaultConfig {
                applicationId "com.leesc.messanger"
                minSdkVersion androidMinSdkVersion
                targetSdkVersion androidTargetSdkVersion
                versionCode buildVersionCode
                versionName buildVersionName
                testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
                buildConfigField("String", "END_POINT", "\"url...\"")
            }

            apply plugin: 'deploygate'

            deploygate {
                userName = "slee8789"
                token = "810f56a99a6965f64bf92f4182c41c9372c26b63"

                apks {
                    release {
                        sourceFile = file("build/outputs/apk/release/app-release.apk")
                    }

                    debug {
                        sourceFile = file("build/outputs/apk/debug/app-debug.apk")
                    }
                }
            }

            lintOptions {
                abortOnError false
            }

            signingConfigs {
                release {
                    def configFile = file("signingconfig.properties")
                    def props = new Properties()
                    props.load(new FileInputStream(configFile))
                    storeFile file("messanger")
                    storePassword props.storePassword
                    keyAlias props.keyAlias
                    keyPassword props.keyPassword
                }
            }

            buildTypes {
                release {
                    minifyEnabled false
                    signingConfig signingConfigs.release
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                }
            }
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            dataBinding {
                enabled = true
            }
        }
    } else {
        apply plugin: 'com.android.library'
        android {
            compileSdkVersion androidCompileSdkVersion
            defaultConfig {
                minSdkVersion androidMinSdkVersion
                targetSdkVersion androidTargetSdkVersion
            }
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//task print() {
//    doLast {
//        println "github push complete"
//    }
//}
